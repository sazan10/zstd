name: Run VMware Chap

on:
  push:

jobs:
  run-vmwarechap:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 
        with:
          ref: 6a77f213c4a19d1837c0f478a1adaca1f5c4d543
          
      - name: Build repository 
        run: make
      
      - name: Install Chap dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake 
      - name: Clone chap repository and build
        run: |
          git clone https://github.com/vmware/chap.git /tmp/chap
          cd /tmp/chap
          git submodule update --init --recursive
          mkdir build-chap
          cd build-chap
          cmake ../
          make
      - name: Run VMware Chap Analyzer
        run: |
          set +e
          mkdir -p chap_results
          directory="$GITHUB_WORKSPACE"
          ulimit -c unlimited
          
          find "$directory" -name "*.so" -exec sh -c '
              for so_file do
                  "$so_file"
              done
          ' sh {} +
          
          commands=("count" "describe" "dump" "enumerate" "explain" "list" "show" "summarize")
          sub_commands=("allocations" "anchored" "anchorpoints" "externalanchored" "externalanchorpoints" "free" "inaccessible" "leaked" "readonly" "registeranchored" "registeranchorpoints" "rxonly" "stackanchorpoints")
          
          for core_file in /var/lib/apport/coredump/*; do
              if [ -f "$core_file" ]; then
                  output_file="./chap_results/${core_file##*/}.txt"
                  
                  for command in "${commands[@]}"; do
                      for sub_command in "${sub_commands[@]}"; do
                          /tmp/chap/build-chap/chap "$core_file" <<EOF >>"$output_file" 2>/dev/null
          $command $sub_command
          EOF
                      done
                  done
              fi
          done
          
      - name: Upload Chap reports
        uses: actions/upload-artifact@v4
        with:
          name: chap-report-${{ github.event.repository.name}}-on-${{ matrix.os }}-from_branch_${{ github.ref_name }}
          path: './chap_results/*'
